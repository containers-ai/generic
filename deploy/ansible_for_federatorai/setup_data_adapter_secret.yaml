# Find current secret api key
- name: Get current data adapter secret
  community.kubernetes.k8s_info:
    kind: Secret
    namespace: "{{ installed_namespace }}"
    api_version: v1
    name: "{{ data_adapter_secret_name }}"
  register: secret_list

- name: Get previous datadog api key in secret
  set_fact:
    check_secret_api_key: "{{ secret_list |to_json | from_json| json_query('resources[0].data.datadog_api_key') }}"

- name: Get previous datadog app key in secret
  set_fact:
    check_secret_app_key: "{{ secret_list |to_json | from_json| json_query('resources[0].data.datadog_application_key') }}"

- name: Patch data adapter secret for api key
  community.kubernetes.k8s:
    merge_type: merge
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ data_adapter_secret_name }}"
        namespace: "{{ installed_namespace }}"
      data: 
        datadog_api_key: "{{ datadog_api_key | b64encode }}"
  register: api_changed
  when: ( need_update_secret == "y" ) and ( datadog_api_key|b64encode != check_secret_api_key )

- name: Patch data adapter secret for app key
  community.kubernetes.k8s:
    merge_type: merge
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ data_adapter_secret_name }}"
        namespace: "{{ installed_namespace }}"
      data: 
        datadog_application_key: "{{ datadog_application_key|b64encode }}"
  register: app_changed
  when: ( need_update_secret == "y" ) and ( datadog_application_key|b64encode != check_secret_app_key )

- name: Scale down deployment
  community.kubernetes.k8s_scale:
    api_version: apps/v1
    kind: Deployment
    name: "{{ data_adapter_deploy_name }}"
    namespace: "{{ installed_namespace }}"
    replicas: 0
    wait_timeout: 120
  when: (api_changed.changed == true) or (app_changed.changed == true)

- name: Pause for 10 seconds.
  pause:
    seconds: 10
  when: (api_changed.changed == true) or (app_changed.changed == true)

- name: Scale up deployment
  community.kubernetes.k8s_scale:
    api_version: apps/v1
    kind: Deployment
    name: "{{ data_adapter_deploy_name }}"
    namespace: "{{ installed_namespace }}"
    replicas: 1
    wait_timeout: 120
  when: (api_changed.changed == true) or (app_changed.changed == true)

- name: Check data adapter pod become ready
  vars:
      pod_number: 16
  include: check_pods_status.yaml
  when: (api_changed.changed == true) or (app_changed.changed == true)