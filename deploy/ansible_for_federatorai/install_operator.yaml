# Get operator file list
- name: Get operator file list
  uri:
    url: "https://api.github.com/repos/containers-ai/generic/contents/deploy/upstream?ref={{ federatorai_version }}"
    method: GET
    return_content: yes
  register: operator_result

- set_fact:
    operator_list: []

- name: Create operator yamls file list
  set_fact:
    operator_list: "{{ operator_list+ 
            [
              item
            ] 
        }}"
  loop: "{{ operator_result | json_query('json[*].name') }}"

- name: debug
  debug: msg={{ operator_list }}

# Clean up old contents inside version folder
- name: Find old contents inside version folder
  find:
    paths: "{{ default_yaml_files_base_path }}/{{ federatorai_version }}"
    patterns: "*.yaml"
  register: files_to_delete

- name: Clean up files inside version folder
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"

# Create version folder
- name: Create version folder
  file:
    path: "{{ default_yaml_files_base_path }}/{{ federatorai_version }}"
    state: directory

# Download all files
- name: Download all yamls
  get_url:
    url: "https://raw.githubusercontent.com/containers-ai/generic/{{ federatorai_version }}/deploy/upstream/{{ item }}"
    dest: "{{ default_yaml_files_base_path }}/{{ federatorai_version }}/{{ item }}"
    mode: 0755
    force: yes
  loop: "{{ operator_list }}"

# Replace info in 03 yaml
- name: Find 03 files
  find:
    paths: "{{ default_yaml_files_base_path }}/{{ federatorai_version }}"
    patterns: "^03-.*.yaml$"
    file_type: "file"
    use_regex: yes
  register: yaml_3_name

- name: Add resource requirements info in 03 file if necessary
  blockinfile:
    dest: "{{ yaml_3_name.files[0].path }}"
    marker: "## {mark} resource requirements for 03 init container"
    insertafter: "name: upgrader"
    block: |2
                resources:
                  limits:
                    cpu: 4000m
                    memory: 8000Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
  when: (enable_resource_requirement == "y")

- name: Add resource requirements info in 03 file if necessary
  blockinfile:
    dest: "{{ yaml_3_name.files[0].path }}"
    marker: "## {mark} resource requirements for 03 container"
    insertafter: "name: federatorai-operator"
    block: |2
                resources:
                  limits:
                    cpu: 4000m
                    memory: 8000Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
  when: (enable_resource_requirement == "y")

- name: Replace tag number in 03 yaml
  replace: 
    dest="{{ yaml_3_name.files[0].path }}" 
    regexp=":latest$"
    replace=":{{ federatorai_version }}"
- name: Replace repo info in 03 yaml if necessary
  replace: 
    dest="{{ yaml_3_name.files[0].path }}" 
    regexp="quay.io/fedaigeneric"
    replace="{{ image_url_prefix }}"
  when: (enable_private_repo == "y") and (image_url_prefix != "")

# Replace namespace in 00 yaml
- name: Find 00 files
  find:
    paths: "{{ default_yaml_files_base_path }}/{{ federatorai_version }}"
    patterns: "^00-.*.yaml$"
    file_type: "file"
    use_regex: yes
  register: yaml_0_name
- name: Replace ns in 00 yaml
  replace: 
    path: "{{ yaml_0_name.files[0].path }}"
    regexp: "name: federatorai" 
    replace: "name: {{ installed_namespace }}"

# Replace namespace in all yamls
- name: Find all yaml files
  find:
    paths: "{{ default_yaml_files_base_path }}/{{ federatorai_version }}"
    patterns: ".*.yaml$"
    file_type: "file"
    use_regex: yes
  register: yaml_all_names
- name: Replace ns in all yamls
  replace: 
    path: "{{ item.path }}"
    regexp: "namespace: federatorai" 
    replace: "namespace: {{ installed_namespace }}"
  loop: "{{ yaml_all_names.files }}"

# For upgrade - delete previous federatorai-operator deployment before apply new yaml(s)
- name: Delete previous Federator.ai operator deployment
  community.kubernetes.k8s:
    state: absent
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ previous_alameda_namespace }}"
    name: "federatorai-operator"
  when: (previous_alameda_namespace != "")

# Apply yamls (except 03)
- name: Apply operator yamls execpt 03
  community.kubernetes.k8s:
    state: present
    src: "{{ item.path }}"
  when: item.path != yaml_3_name.files[0].path
  loop: "{{ yaml_all_names.files| sort(attribute='path') }}"

# Apply 03 yaml
- name: Apply 03 operator yaml
  community.kubernetes.k8s:
    state: present
    src: "{{ yaml_3_name.files[0].path }}"

# Fresh install
- name: Check Federator.ai operator pod become ready (Fresh install)
  vars:
      pod_number: 0
  include: check_pods_status.yaml
  when: (previous_alamedaservice_name == "")

# Upgrade
- name: Get federatorai operator new name
  include: get_operator_new_name.yaml
  when: (previous_alamedaservice_name != "")

# Upgrade
- name: Check Federator.ai operator pod become ready (Upgrade stage)
  include: check_operator_pod_status.yaml
  when: (previous_alamedaservice_name != "")